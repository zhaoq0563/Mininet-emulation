===========================
Tunnel Testing instructions
===========================

Prerequisite
------------

Make sure the forwarder app is ready
	- Check if the binary is compiled in tunel-test folder
	- If NOT, compile it with
		- 'gcc -o tunnel tunnel.c -lpthread -lm', this is the version without delay shaping
		- 'gcc -o tunnel tunnel-thread.c -lpthread -lm', this is the version with delay shaping


No router topology
------------------

1, In 'test.py', modify the loss rate at line 115

2, In 'test.py', modify the total running time of iPerf at line 27

3, Run the simulation with 'sudo python test.py'

4, The throughput results reported by iPerf will be shown on the console when finished

5, Wireshark captured package are stored in 'results/' directory



Router topology
---------------

1, In 'router.py', modify the loss rate of the tunnel link at line 142

2, Run the simulation with 'sudo python router.py'

3, Select the bridged network and the vports created for the virtual machines
	- choose vport1 for VM1 and vport2 for VM2

4, Launch the virtual machines

5, Set the routes for the virtual machines
	- On VM1, use command "sudo route add default gw 10.0.1.1 dev 'network-interface'"
	- On VM2, use command "sudo route add default gw 10.0.2.1 dev 'network-interface'"

6, VM1 and VM2 are now connected via the tunnel



========================
Calculation instructions
========================

The pcap files are stored in 'results/' directory and grouped in loss rate. Modify which loss rate group you want to
calcualte the throughput at line 5 in 'pcap_cal.py'. Then just simply run with 'python pcap_cal.py'. Results will be
printed on console and more detailed infomation will be stored in file 'res.stat' at each single result directory.
